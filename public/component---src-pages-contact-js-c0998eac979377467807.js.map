{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/globals/Title.js","webpack:///./src/components/globals/Background.js","webpack:///./src/components/home/Contact.js"],"names":["query","ContactPage","data","useState","isMobile","setIsMobile","useEffect","window","innerWidth","global","onresize","images","headerImage","edges","node","largeImage","contact","fluid","smallImage","contactSmall","title","img","styleClass","Title","TitleContainer","className","defaultProps","styled","div","BackgroundImage","loadable","Background","children","src","logo","alt","Contact","action","method","htmlFor","type","name","id","placeholder","rows","Button","button"],"mappings":"8FAAA,kIA0CaA,EAAK,aAqBHC,UAvDK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAEAC,oBAAS,GAAlCC,EAFyB,KAEfC,EAFe,KAIhCC,qBAAU,WACRC,OAAOC,YAAc,IAAMH,GAAY,GAAQA,GAAY,MAGvC,oBAAXE,SACTE,EAAOF,OAAS,IAGlBA,OAAOG,SAAW,WAChBH,OAAOC,YAAc,IAAMH,GAAY,GAAQA,GAAY,IAG7D,IAAMM,EAAST,EAAKU,YAAYC,MAAM,GAAGC,KAEnCC,EAAaJ,EAAOK,QAAQC,MAC5BC,EAAaP,EAAOQ,aAAeR,EAAOQ,aAAaF,MAAQ,KAErE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,MAAM,YACX,kBAAC,IAAD,CACEC,IAAKjB,GAAYc,EAAaA,EAAaH,EAC3CK,MAAM,IACNE,WAAW,yBAEb,kBAAC,IAAD,S,wDCrCN,uEAGe,SAASC,EAAT,GAAuC,IAAtBH,EAAqB,EAArBA,MAAOE,EAAc,EAAdA,WACrC,OACE,kBAACE,EAAD,CAAgBC,UAAU,OACtB,yBAAKA,UAAU,wBACf,wBAAIA,UAAWH,GAAaF,KAMpCG,EAAMG,aAAe,CACnBN,MAAO,gBACPE,WAAY,6CAGd,IAAME,EAAiBG,IAAOC,IAAV,4EAAGD,CAAH,+B,kCClBpB,gFAUME,EAAkBC,UAAS,kBAAM,yCAExB,SAASC,EAAT,GAA2D,IAArCV,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,WAAYF,EAAmB,EAAnBA,MAAOY,EAAY,EAAZA,SAC3D,OACE,kBAACH,EAAD,CAAiBJ,UAAWH,EAAYL,MAAOI,GAC7C,wBAAII,UAAU,0EACXL,GAEH,yBAAKa,IAAKC,IAAMT,UAAU,YAAYU,IAAI,cACzCH,GAKPD,EAAWL,aAAe,CACxBN,MAAO,gBACPE,WAAY,uB,kCC1Bd,uEAIe,SAASc,IACtB,OACE,6BAASX,UAAU,gBACjB,kBAAC,IAAD,CAAOL,MAAM,eACb,yBAAKK,UAAU,OACb,yBAAKA,UAAU,oCACb,0BAAMY,OAAO,gCAAgCC,OAAO,QAElD,yBAAKb,UAAU,cACb,2BAAOc,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLf,UAAU,eACVgB,KAAK,OACLC,GAAG,OACHC,YAAY,UAIhB,yBAAKlB,UAAU,cACb,2BAAOc,QAAQ,QAAf,SACA,2BACEC,KAAK,OACLf,UAAU,eACVgB,KAAK,QACLC,GAAG,QACHC,YAAY,WAIhB,yBAAKlB,UAAU,cACb,2BAAOc,QAAQ,WAAf,WACA,8BACEE,KAAK,UACLC,GAAG,UACHE,KAAK,IACLD,YAAY,UACZlB,UAAU,kBAId,kBAACoB,EAAD,CACEL,KAAK,SACLf,UAAU,iDAFZ,cAaZ,IAAMoB,EA1DN,UA0DelB,EAAOmB,OAAV,kEAAGnB,CAAH","file":"component---src-pages-contact-js-c0998eac979377467807.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Background from \"../components/globals/Background\";\nimport Contact from \"../components/home/Contact\";\nimport SEO from \"../components/seo\";\n\nconst ContactPage = ({ data }) => {\n  \n  const [isMobile, setIsMobile] = useState(true);\n\n  useEffect(() => {\n    window.innerWidth <= 800 ? setIsMobile(true) : setIsMobile(false);\n  });\n\n  if (typeof window === \"undefined\") {\n    global.window = {};\n  }\n\n  window.onresize = function() {\n    window.innerWidth <= 800 ? setIsMobile(true) : setIsMobile(false);\n  };\n\n  const images = data.headerImage.edges[0].node;\n\n  const largeImage = images.contact.fluid;\n  const smallImage = images.contactSmall ? images.contactSmall.fluid : null;\n\n  return (\n    <Layout>\n      <SEO title=\"Contact\" />\n      <Background\n        img={isMobile && smallImage ? smallImage : largeImage}\n        title=\" \"\n        styleClass=\"secondary-background\"\n      />\n      <Contact />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  {\n    headerImage: allContentfulHeaderImages(sort: { fields: createdAt }) {\n      edges {\n        node {\n          contact {\n            fluid(cropFocus: CENTER, resizingBehavior: FILL) {\n              ...GatsbyContentfulFluid\n            }\n          }\n           contactSmall {\n             fluid(cropFocus: CENTER, resizingBehavior: FILL) {\n               ...GatsbyContentfulFluid\n             }\n           }\n        }\n      }\n    }\n  }\n`;\n\nexport default ContactPage;\n","import React from \"react\";\nimport styled from 'styled-components';\n\nexport default function Title({ title, styleClass }) {\n  return (\n    <TitleContainer className=\"row\">\n        <div className=\"col text-center py-4\">\n        <h1 className={styleClass}>{title}</h1>\n        </div>\n    </TitleContainer>\n  );\n}\n\nTitle.defaultProps = {\n  title: \"default title\",\n  styleClass: \"display-4 text-capitalize main-page-title\"\n};\n\nconst TitleContainer = styled.div`\n  background: var(--main1);\n`","import React from \"react\";\nimport logo from \"../../images/otherworld-logo.svg\";\n// import loadable from \"@loadable/component\";\n// import BackgroundImage from \"gatsby-background-image\";\n\n// gatsby-background-image was causing HTML build error since it tried to access the window object which is not available at build time\n\n// this setup will work for gatsby build, but will break when using gatsby develop. While using gatsby develop, switch BackgroundImage to normal \n// import instead of using @loadable/component\n\nconst BackgroundImage = loadable(() => import(\"gatsby-background-image\"));\n\nexport default function Background({ img, styleClass, title, children }) {\n  return (\n    <BackgroundImage className={styleClass} fluid={img}>\n      <h1 className=\"title text-white text-uppercase text-center display-4 font-weight-bold\">\n        {title}\n      </h1>\n      <img src={logo} className=\"main-logo\" alt=\"main logo\"></img>\n      {children}\n    </BackgroundImage>\n  );\n}\n\nBackground.defaultProps = {\n  title: \"default title\",\n  styleClass: \"default-background\"\n};\n","import React from \"react\";\nimport Title from \"../globals/Title\";\nimport styled from \"styled-components\";\n\nexport default function Contact() {\n  return (\n    <section className=\"contact py-5\">\n      <Title title=\"Contact me\" />\n      <div className=\"row\">\n        <div className=\"col-10 col-sm-8 col-md-6 mx-auto\">\n          <form action=\"https://formspree.io/mknrpjpl\" method=\"POST\">\n            {/* name */}\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Name\"\n              />\n            </div>\n            {/* email */}\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Email</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n              />\n            </div>\n            {/* message */}\n            <div className=\"form-group\">\n              <label htmlFor=\"message\">Message</label>\n              <textarea\n                name=\"message\"\n                id=\"message\"\n                rows=\"5\"\n                placeholder=\"Message\"\n                className=\"form-control\"\n              ></textarea>\n            </div>\n            {/* submit */}\n            <Button\n              type=\"submit\"\n              className=\"btn btn-purple btn-block text-capitalize my-5\"\n            >\n              Submit\n            </Button>\n          </form>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nconst Button = styled.button`\n  max-width: 80%;\n  margin: auto;\n\n  @media(min-width: 700px){\n    max-width: 50%;\n  }\n`"],"sourceRoot":""}